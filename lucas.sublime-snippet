<snippet>
    <content><![CDATA[

const int MOD = 998244353;
#define N 5001
ll fac[N], ifac[N];
inline void precompute(){
    int i;
    fac[0] = 1;
    for (i = 1; i < N; i++){
        fac[i] = (i * fac[i - 1]) % MOD;
    }
    ifac[N - 1] = power<ll>(fac[N - 1], MOD - 2, MOD);
    for (i = N - 2; i >= 0; i--){
        ifac[i] = ((i + 1) * ifac[i + 1]) % MOD;
    }
}


ll getncr(ll n, ll r, ll p) {
    if (r > n)
        return 0;

    ll ans = (((fac[n] * ifac[r]) % p) * ifac[n-r]) % p;
    return ans;
}



ll fromDeci(ll inputNum, ll base) {
    vi res;
    while (inputNum > 0) {
        res.pb(inputNum % base);
        inputNum = int(inputNum / base);
    }
    reverse(all(res));

    return res;
}

ll getncrByLucas(ll x, ll y, ll p) {
    # used when p is prime and n > p
    if (x < p)
        return getncr(x, y, p);

    vi x = fromDeci(x, p);
    vi y = fromDeci(y, p);
    ll ans = 1;

    for (int i = 0; i < y.size(); i++)
        ans = (ans * getncr(x[i], y[i], p)) % p;

    return ans;
}
int nCr(int n, int r){
    int p = 1, k = 1;
    r = min(r, n - r);
    if(r != 0){
        while(r){
            p *= n;
            k *= r;
            int g = __gcd(p,k);
            p /= g;
            k /= g;
            n--, r--;
        }
    }else p = 1;
    return p;
}
]]></content>
    <tabTrigger>lucas</tabTrigger>
    <scope>source.c++</scope>
</snippet>



